{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAVEO,SAASC,cAAc,SAa/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBAEF,MACEC,UAAUC,OAAEA,EAAQb,MAAAc,EAAKC,KAAEA,IACzBL,EAAEM,OAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOL,EAAOM,OAAQF,IACxCnB,EAAcmB,EAAI,EAAGC,OAAOJ,EAAMK,OAASF,EAAIC,OAAOH,EAAKI,QACxDC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\nformEl.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n\n  const {\n    elements: { amount, delay, step },\n  } = e.target;\n\n  for (let i = 0; i < Number(amount.value); i++) {\n    createPromise(i + 1, Number(delay.value) + i * Number(step.value))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","elements","amount","delay1","step","target","i","Number","value","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.a0d8508c.js.map"}